[
  "index.md",
  [
    "matters/why-fp-matter.html",
    "matters/vs.html",
    "productivity/qsort/quick-sort-in-c.md",
    "productivity/qsort/quick-sort-in-haskell.md"
  ],
  [
    "raise/lisp.md",
    "raise/fpcomplete.md",
    "raise/raise.md",
    "raise/twitter-storm.md",
    "raise/parallel.html",
    "raise/support.md"
  ],
  "features.md",
  [
    "expression/expression-and-statement.html",
    "expression/lambda-expression.html",
    "eval-apply/repl.md"
  ],
  [
    "eval-apply/wizard.html",
    "eval-apply/eval-apply.html",
    "eval-apply/eval-at-runtime.html",
    "eval-apply/eval-with-side-effect.html"
  ],
  [
    "side-effects/side-effects.md",
    "side-effects/why-side-effects-matter.html",
    "side-effects/heat.md",
    "side-effects/mvcc.md",
    "side-effects/cost-value.md",
    "side-effects/persistent.md",
    "side-effects/clojure-persistent-vector.md",
    "side-effects/monad.md"
  ],
  [
    "highorder/high-order-function.md",
    "highorder/notations.md",
    "highorder/high-order-notation.md",
    "highorder/haskell.md",
    "highorder/fn.js.md",
    "highorder/sinatra.md",
    "highorder/node.md"
  ],
  [
    "contract/design-by-contract.md",
    "contract/java-jdbc-transaction.md",
    "contract/template-pattern-transaction.md",
    "contract/template-pattern-transaction1.md",
    "contract/template-pattern-fp.md"
  ],
  [
    "lazy/lazy.md",
    "lazy/haskell.md",
    "lazy/clojure-lazy.md"
  ],
  [
    "oop/fp-and-oop.md",
    "oop/javascript-oop.md",
    "oop/javascript-oop1.md",
    "oop/lisp-clos.md",
    "oop/memory-layout.md"
  ],
  [
    "lambda/lambda-calculus.md",
    "lambda/church.md",
    "lambda/y-combinator.html"
  ],
  "thanks.md"
]